{"ast":null,"code":"import _slicedToArray from\"C:/Users/shiv/IdeaProjects/React-todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Button,Modal,ModalHeader,ModalBody,ModalFooter}from'reactstrap';var EditTaskPopup=function EditTaskPopup(_ref){var modal=_ref.modal,toggle=_ref.toggle,updateTask=_ref.updateTask,taskObj=_ref.taskObj;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),taskName=_useState2[0],setTaskName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),description=_useState4[0],setDescription=_useState4[1];var handleChange=function handleChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;if(name===\"taskName\"){setTaskName(value);}else{setDescription(value);}};useEffect(function(){setTaskName(taskObj.Name);setDescription(taskObj.Description);},[]);var handleUpdate=function handleUpdate(e){e.preventDefault();var tempObj={};tempObj['Name']=taskName;tempObj['Description']=description;updateTask(tempObj);};return/*#__PURE__*/_jsxs(Modal,{isOpen:modal,toggle:toggle,children:[/*#__PURE__*/_jsx(ModalHeader,{toggle:toggle,children:\"Update Task\"}),/*#__PURE__*/_jsxs(ModalBody,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Task Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:taskName,onChange:handleChange,name:\"taskName\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"textarea\",{rows:\"5\",className:\"form-control\",value:description,onChange:handleChange,name:\"description\"})]})]}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:handleUpdate,children:\"Update\"}),' ',/*#__PURE__*/_jsx(Button,{color:\"secondary\",onClick:toggle,children:\"Cancel\"})]})]});};export default EditTaskPopup;","map":{"version":3,"sources":["C:/Users/shiv/IdeaProjects/React-todo-list/src/modals/EditTask.js"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","EditTaskPopup","modal","toggle","updateTask","taskObj","taskName","setTaskName","description","setDescription","handleChange","e","target","name","value","Name","Description","handleUpdate","preventDefault","tempObj"],"mappings":"yPAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA2BC,SAA3B,KAA2C,OAA3C,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,WAAxB,CAAqCC,SAArC,CAAgDC,WAAhD,KAAmE,YAAnE,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA0C,IAAxCC,CAAAA,KAAwC,MAAxCA,KAAwC,CAAjCC,MAAiC,MAAjCA,MAAiC,CAAzBC,UAAyB,MAAzBA,UAAyB,CAAbC,OAAa,MAAbA,OAAa,eAC5BX,QAAQ,CAAC,EAAD,CADoB,wCACrDY,QADqD,eAC3CC,WAD2C,8BAEtBb,QAAQ,CAAC,EAAD,CAFc,yCAErDc,WAFqD,eAExCC,cAFwC,eAI5D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,eAEFA,CAAC,CAACC,MAFA,CAEjBC,IAFiB,WAEjBA,IAFiB,CAEXC,KAFW,WAEXA,KAFW,CAIxB,GAAGD,IAAI,GAAK,UAAZ,CAAuB,CACnBN,WAAW,CAACO,KAAD,CAAX,CACH,CAFD,IAEK,CACDL,cAAc,CAACK,KAAD,CAAd,CACH,CAGJ,CAXD,CAaAnB,SAAS,CAAC,UAAM,CACZY,WAAW,CAACF,OAAO,CAACU,IAAT,CAAX,CACAN,cAAc,CAACJ,OAAO,CAACW,WAAT,CAAd,CACH,CAHQ,CAGP,EAHO,CAAT,CAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACN,CAAD,CAAO,CACxBA,CAAC,CAACO,cAAF,GACA,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACAA,OAAO,CAAC,MAAD,CAAP,CAAkBb,QAAlB,CACAa,OAAO,CAAC,aAAD,CAAP,CAAyBX,WAAzB,CACAJ,UAAU,CAACe,OAAD,CAAV,CACH,CAND,CAQA,mBACI,MAAC,KAAD,EAAO,MAAM,CAAEjB,KAAf,CAAsB,MAAM,CAAEC,MAA9B,wBACI,KAAC,WAAD,EAAa,MAAM,CAAEA,MAArB,yBADJ,cAEI,MAAC,SAAD,yBAEQ,aAAK,SAAS,CAAG,YAAjB,wBACI,oCADJ,cAEI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,CAAG,cAA/B,CAA8C,KAAK,CAAIG,QAAvD,CAAiE,QAAQ,CAAII,YAA7E,CAA2F,IAAI,CAAG,UAAlG,EAFJ,GAFR,cAMQ,aAAK,SAAS,CAAG,YAAjB,wBACI,sCADJ,cAEI,iBAAU,IAAI,CAAG,GAAjB,CAAqB,SAAS,CAAG,cAAjC,CAAgD,KAAK,CAAIF,WAAzD,CAAsE,QAAQ,CAAIE,YAAlF,CAAgG,IAAI,CAAG,aAAvG,EAFJ,GANR,GAFJ,cAcI,MAAC,WAAD,yBACA,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,OAAO,CAAEO,YAAjC,oBADA,CAC+D,GAD/D,cAEA,KAAC,MAAD,EAAQ,KAAK,CAAC,WAAd,CAA0B,OAAO,CAAEd,MAAnC,oBAFA,GAdJ,GADJ,CAqBH,CAnDD,CAqDA,cAAeF,CAAAA,aAAf","sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    },[])\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Name'] = taskName\r\n        tempObj['Description'] = description\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Task Name</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTaskPopup;"]},"metadata":{},"sourceType":"module"}