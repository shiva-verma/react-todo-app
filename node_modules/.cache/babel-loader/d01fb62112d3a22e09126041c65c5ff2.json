{"ast":null,"code":"import _slicedToArray from\"C:/Users/shiv/IdeaProjects/React-todo-list/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import CreateTask from'../modals/CreateTask';import Card from'./Card';var TodoList=function TodoList(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modal=_useState2[0],setModal=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),taskList=_useState4[0],setTaskList=_useState4[1];useEffect(function(){var arr=localStorage.getItem(\"taskList\");if(arr){var obj=JSON.parse(arr);setTaskList(obj);}},[]);var deleteTask=function deleteTask(index){var tempList=taskList;tempList.splice(index,1);localStorage.setItem(\"taskList\",JSON.stringify(tempList));setTaskList(tempList);window.location.reload();};var updateListArray=function updateListArray(obj,index){var tempList=taskList;tempList[index]=obj;localStorage.setItem(\"taskList\",JSON.stringify(tempList));setTaskList(tempList);window.location.reload();};var toggle=function toggle(){setModal(!modal);};var saveTask=function saveTask(taskObj){var tempList=taskList;tempList.push(taskObj);localStorage.setItem(\"taskList\",JSON.stringify(tempList));setTaskList(taskList);setModal(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Todo List\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mt-2\",onClick:function onClick(){return setModal(true);},children:\"Create Task\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-container\",children:taskList&&taskList.map(function(obj,index){return/*#__PURE__*/_jsx(Card,{taskObj:obj,index:index,deleteTask:deleteTask,updateListArray:updateListArray});})}),/*#__PURE__*/_jsx(CreateTask,{toggle:toggle,modal:modal,save:saveTask})]});};export default TodoList;","map":{"version":3,"sources":["C:/Users/shiv/IdeaProjects/React-todo-list/src/components/TodoList.js"],"names":["React","useEffect","useState","CreateTask","Card","TodoList","modal","setModal","taskList","setTaskList","arr","localStorage","getItem","obj","JSON","parse","deleteTask","index","tempList","splice","setItem","stringify","window","location","reload","updateListArray","toggle","saveTask","taskObj","push","map"],"mappings":"8SAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,sBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,eACOH,QAAQ,CAAC,KAAD,CADf,wCACZI,KADY,eACLC,QADK,8BAEaL,QAAQ,CAAC,EAAD,CAFrB,yCAEZM,QAFY,eAEFC,WAFE,eAInBR,SAAS,CAAC,UAAM,CACZ,GAAIS,CAAAA,GAAG,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAV,CAEA,GAAGF,GAAH,CAAO,CACH,GAAIG,CAAAA,GAAG,CAAGC,IAAI,CAACC,KAAL,CAAWL,GAAX,CAAV,CACAD,WAAW,CAACI,GAAD,CAAX,CACH,CACJ,CAPQ,CAON,EAPM,CAAT,CAUA,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1B,GAAIC,CAAAA,QAAQ,CAAGV,QAAf,CACAU,QAAQ,CAACC,MAAT,CAAgBF,KAAhB,CAAuB,CAAvB,EACAN,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAiCN,IAAI,CAACO,SAAL,CAAeH,QAAf,CAAjC,EACAT,WAAW,CAACS,QAAD,CAAX,CACAI,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAND,CAQA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACZ,GAAD,CAAMI,KAAN,CAAgB,CACpC,GAAIC,CAAAA,QAAQ,CAAGV,QAAf,CACAU,QAAQ,CAACD,KAAD,CAAR,CAAkBJ,GAAlB,CACAF,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAiCN,IAAI,CAACO,SAAL,CAAeH,QAAf,CAAjC,EACAT,WAAW,CAACS,QAAD,CAAX,CACAI,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAND,CAQA,GAAME,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBnB,QAAQ,CAAC,CAACD,KAAF,CAAR,CACH,CAFD,CAIA,GAAMqB,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAa,CAC1B,GAAIV,CAAAA,QAAQ,CAAGV,QAAf,CACAU,QAAQ,CAACW,IAAT,CAAcD,OAAd,EACAjB,YAAY,CAACS,OAAb,CAAqB,UAArB,CAAiCN,IAAI,CAACO,SAAL,CAAeH,QAAf,CAAjC,EACAT,WAAW,CAACD,QAAD,CAAX,CACAD,QAAQ,CAAC,KAAD,CAAR,CACH,CAND,CASA,mBACI,wCACI,aAAK,SAAS,CAAG,oBAAjB,wBACI,iCADJ,cAEI,eAAQ,SAAS,CAAG,sBAApB,CAA2C,OAAO,CAAI,yBAAMA,CAAAA,QAAQ,CAAC,IAAD,CAAd,EAAtD,yBAFJ,GADJ,cAKI,YAAK,SAAS,CAAG,gBAAjB,UACCC,QAAQ,EAAIA,QAAQ,CAACsB,GAAT,CAAa,SAACjB,GAAD,CAAOI,KAAP,qBAAiB,KAAC,IAAD,EAAM,OAAO,CAAIJ,GAAjB,CAAsB,KAAK,CAAII,KAA/B,CAAsC,UAAU,CAAID,UAApD,CAAgE,eAAe,CAAIS,eAAnF,EAAjB,EAAb,CADb,EALJ,cAQI,KAAC,UAAD,EAAY,MAAM,CAAIC,MAAtB,CAA8B,KAAK,CAAIpB,KAAvC,CAA8C,IAAI,CAAIqB,QAAtD,EARJ,GADJ,CAYH,CAvDD,CAyDA,cAAetB,CAAAA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport CreateTask from '../modals/CreateTask'\r\nimport Card from './Card';\r\n\r\nconst TodoList = () => {\r\n    const [modal, setModal] = useState(false);\r\n    const [taskList, setTaskList] = useState([])\r\n    \r\n    useEffect(() => {\r\n        let arr = localStorage.getItem(\"taskList\")\r\n       \r\n        if(arr){\r\n            let obj = JSON.parse(arr)\r\n            setTaskList(obj)\r\n        }\r\n    }, [])\r\n\r\n\r\n    const deleteTask = (index) => {\r\n        let tempList = taskList\r\n        tempList.splice(index, 1)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const updateListArray = (obj, index) => {\r\n        let tempList = taskList\r\n        tempList[index] = obj\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(tempList)\r\n        window.location.reload()\r\n    }\r\n\r\n    const toggle = () => {\r\n        setModal(!modal);\r\n    }\r\n\r\n    const saveTask = (taskObj) => {\r\n        let tempList = taskList\r\n        tempList.push(taskObj)\r\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\r\n        setTaskList(taskList)\r\n        setModal(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className = \"header text-center\">\r\n                <h3>Todo List</h3>\r\n                <button className = \"btn btn-primary mt-2\" onClick = {() => setModal(true)} >Create Task</button>\r\n            </div>\r\n            <div className = \"task-container\">\r\n            {taskList && taskList.map((obj , index) => <Card taskObj = {obj} index = {index} deleteTask = {deleteTask} updateListArray = {updateListArray}/> )}\r\n            </div>\r\n            <CreateTask toggle = {toggle} modal = {modal} save = {saveTask}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}